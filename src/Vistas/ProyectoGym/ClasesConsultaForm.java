/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas.ProyectoGym;

import AccesoDatos.ProyectoGym.ClaseData;
import AccesoDatos.ProyectoGym.EntrenadorData;
import AccesoDatos.ProyectoGym.SocioData;
import Entidades.ProyectoGym.Clase;
import Entidades.ProyectoGym.Entrenador;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ivan
 */
public class ClasesConsultaForm extends javax.swing.JInternalFrame {
   
    private ArrayList<Clase>listaC;
    private ArrayList<Clase>listaID;
    private Clase nuevaClase = null;
    private DefaultTableModel modelo;
    
    private SocioData sd = new SocioData();
    private EntrenadorData ed = new EntrenadorData();
    private ClaseData claseD = new ClaseData();
    public ClasesConsultaForm() {
        initComponents();
        modelo = new DefaultTableModel();
        llenarTabla();
        armarCabeceraTabla();
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jtEntrenadorID = new javax.swing.JTextField();
        jbBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTablaGYM = new javax.swing.JTable();
        jbSalir = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Listas de Clases");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Busqueda por Nombre :");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Busqueda por ID Entrenador :");

        jtEntrenadorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtEntrenadorIDActionPerformed(evt);
            }
        });

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jtTablaGYM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Clase", "Nombre", "ID Entrenador", "Horario", "Estado", "Capacidad"
            }
        ));
        jScrollPane1.setViewportView(jtTablaGYM);

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbModificar.setText("Modificar");
        jbModificar.setEnabled(false);
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jtEntrenadorID))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtNombre)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 132, Short.MAX_VALUE)))))
                .addGap(215, 215, 215))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jbEliminar)
                .addGap(178, 178, 178)
                .addComponent(jbModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jbBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtEntrenadorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalir)
                    .addComponent(jbEliminar)
                    .addComponent(jbModificar))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        int fila = jtTablaGYM.getSelectedRow();
         if(fila == -1){
            JOptionPane.showMessageDialog(this,"Seleccione una fila para eliminar de la tabla");
        }    
         int idClase = (int) jtTablaGYM.getValueAt(fila, 0);
         claseD.eliminarClase(idClase);
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
      try {
            String nombre = jtNombre.getText();
            int idEntrenador = jtEntrenadorID.getText().isEmpty() ? -1 : Integer.parseInt(jtEntrenadorID.getText());
            List<Clase> clases;

        if (!nombre.isEmpty()) {
             clases = claseD.listarClasesPorNombre(nombre);
           }else if (idEntrenador != -1) {
             Entrenador entrenador = ed.buscarEntrenadorxID(idEntrenador);
            if (entrenador != null) {
             clases = claseD.listarClasesPorEntrenador(entrenador);
           }else {
             JOptionPane.showMessageDialog(this, "Entrenador no encontrado con ID: " + idEntrenador);
           return;
                    }
          }else {
              clases = claseD.listarClases();
                }  
                 limpiarTabla();
           for(Clase clase:clases){
              modelo.addRow(new Object[]{clase.getId_clase(),clase.getNombre(),clase.getId_entrenador().getId_entrenador(),clase.getHorario(),clase.getCapacidad(),clase.isEstado()});
              }
           }catch(NumberFormatException ex){
            
        }
         
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jtEntrenadorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtEntrenadorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtEntrenadorIDActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
       
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JTextField jtEntrenadorID;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTable jtTablaGYM;
    // End of variables declaration//GEN-END:variables

     private void armarCabeceraTabla() {

        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add(" ID Clase: ");
        filaCabecera.add(" Nombre:");
        filaCabecera.add(" ID Entrenador: ");
        filaCabecera.add("Horario:");
        filaCabecera.add("capacidad");
        filaCabecera.add("Estado");
        
                
        for (Object it : filaCabecera) {

            modelo.addColumn(it);

        }
        jtTablaGYM.setModel(modelo);

    }
      private void limpiarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) jtTablaGYM.getModel();
        modelo.setRowCount(0);
    }
      
      private void llenarTabla() {
        
          List<Clase>clases = claseD.listarClases();
          for(Clase clase:clases){
              modelo.addRow(new Object[]{clase.getId_clase(),clase.getNombre(),clase.getId_entrenador().getId_entrenador(),clase.getHorario(),clase.getCapacidad(),clase.isEstado()});
          }
              
        }
   }

